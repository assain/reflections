What happens when you initialize a repository? Why do you need to do it?

An .git file is added to keep the meta data, and to start versioning it and 
also to harness the powers git provides.	

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area allows you to add files that needs to be put into the git repo.

How can you use the staging area to make sure you have one commit per logical
change?

We can add a change to the staging area, and do a git diff --staged to make sure,
the change we make is a logical one.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches can be used to play around with new experimental features and merge it 
if things go smooth else discard.


How do the diagrams help you visualize the branch structure?

Now, I realize the Head detached message, and why certain commits of mine get lost
because the commits are unreachable from the tip of the branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Merging two branches helps to keep the the production branch ready with the 
new features. The diagram helps us to visualize it, and realize which commits 
are actually reachable.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Pros it merges branched without user interference in cases on ambiguity.
However, you'll need to interfere in case of ambiguity.
You'll have to do a lot of pointer manipulations in case you're doing it 
all by yourself.